diff --git a/node_modules/react-native-webview/apple/RNCWebView.h b/node_modules/react-native-webview/apple/RNCWebView.h
index 90c9d62..4dfabcd 100644
--- a/node_modules/react-native-webview/apple/RNCWebView.h
+++ b/node_modules/react-native-webview/apple/RNCWebView.h
@@ -50,6 +50,7 @@ shouldStartLoadForRequest:(NSMutableDictionary<NSString *, id> *_Nonnull)request
 @property (nonatomic, assign) BOOL pagingEnabled;
 @property (nonatomic, assign) CGFloat decelerationRate;
 @property (nonatomic, assign) BOOL allowsInlineMediaPlayback;
+@property (nonatomic, assign) BOOL allowsUnsecureHttps;
 @property (nonatomic, assign) BOOL allowsAirPlayForMediaPlayback;
 @property (nonatomic, assign) BOOL bounces;
 @property (nonatomic, assign) BOOL mediaPlaybackRequiresUserAction;
diff --git a/node_modules/react-native-webview/apple/RNCWebView.m b/node_modules/react-native-webview/apple/RNCWebView.m
index 7570d8d..90dc252 100644
--- a/node_modules/react-native-webview/apple/RNCWebView.m
+++ b/node_modules/react-native-webview/apple/RNCWebView.m
@@ -975,6 +975,12 @@ - (void)                    webView:(WKWebView *)webView
     completionHandler(NSURLSessionAuthChallengeUseCredential, clientAuthenticationCredential);
     return;
   }
+  if (_allowsUnsecureHttps == true) {
+    SecTrustRef trust = [[challenge protectionSpace] serverTrust];
+    NSURLCredential *useCredential = [NSURLCredential credentialForTrust:trust];
+    completionHandler(NSURLSessionAuthChallengeUseCredential, useCredential);
+    return;
+  }
   if ([[challenge protectionSpace] serverTrust] != nil && customCertificatesForHost != nil && host != nil) {
     SecCertificateRef localCertificate = (__bridge SecCertificateRef)([customCertificatesForHost objectForKey:host]);
     if (localCertificate != nil) {
diff --git a/node_modules/react-native-webview/apple/RNCWebViewManager.m b/node_modules/react-native-webview/apple/RNCWebViewManager.m
index 401e40e..c36b354 100644
--- a/node_modules/react-native-webview/apple/RNCWebViewManager.m
+++ b/node_modules/react-native-webview/apple/RNCWebViewManager.m
@@ -71,6 +71,7 @@ - (RCTUIView *)view
 RCT_EXPORT_VIEW_PROPERTY(allowFileAccessFromFileURLs, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(allowUniversalAccessFromFileURLs, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(allowsInlineMediaPlayback, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(allowsUnsecureHttps, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(allowsAirPlayForMediaPlayback, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(mediaPlaybackRequiresUserAction, BOOL)
 #if WEBKIT_IOS_10_APIS_AVAILABLE
diff --git a/node_modules/react-native-webview/lib/WebViewTypes.d.ts b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
index 74e14ef..0cb95c9 100644
--- a/node_modules/react-native-webview/lib/WebViewTypes.d.ts
+++ b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
@@ -406,6 +406,11 @@ export interface IOSWebViewProps extends WebViewSharedProps {
      * @platform ios
      */
     allowsInlineMediaPlayback?: boolean;
+    /**
+     * A Boolean value indicating whether unsecure https is allowed. The default value is `false`.
+     * @platform ios
+     */
+    allowsUnsecureHttps?: boolean;
     /**
      * A Boolean value indicating whether AirPlay is allowed. The default value is `false`.
      * @platform ios